rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Utils
    function isMember(groupId, uid){
      return exists(/databases/$(database)/documents/groups/$(groupId)/members/$(uid));
    }

    function isAdmin(groupId, uid){
      return get(/databases/$(database)/documents/groups/$(groupId)).data.createdBy == uid;
    }

    // Users
    match /users/{userId} {
      allow create: if (
        request.resource.data.createdAt == request.time
        && request.auth.uid == userId
        && request.resource.data.keys().hasOnly(["uid", "createdAt", "username"])
      );
      allow update: if (
        request.auth.uid == userId
        && request.resource.data.keys().hasOnly(["username"])
      );
      allow delete: if (
        request.auth.uid == userId
      );
      allow get, list: if true;
    }

    // Groups
    match /groups/{groupId} {
      allow create: if (
        request.auth.uid != null
        && request.resource.data.createdBy == request.auth.uid
      );
      allow update, delete: if (
        resource.data.createdBy == request.auth.uid
      )
      allow get, list: if (
        isMember(groupId, request.auth.uid)
        || resource.data.createdBy == request.auth.uid
      );
    }

    // Members
    match /groups/{groupId}/members/{memberId} {
      allow create: if (
        request.auth != null && (
          isAdmin(groupId, request.auth.uid) ||
          get(/databases/$(database)/documents/groups/$(groupId)/invites/$(request.resource.data.inviteId)).data.expiresAt > request.time
        )
      );
      allow update, delete: if (
        request.auth.uid == memberId
      );
      allow get, list: if (
        isMember(groupId, request.auth.uid)
      );
    }

    match /{path=**}/members/{memberId} {
      allow get, list: if (
        resource.data.uid == request.auth.uid
      );
    }

    // Chats
    match /groups/{groupId}/chats/{chatId} {
      allow create: if (
        isAdmin(groupId, request.auth.uid) 
      );
      allow update, delete: if (
        isAdmin(groupId, request.auth.uid) 
      );
      allow get, list: if (
        isMember(groupId, request.auth.uid)
      );
    }

    // Messages
    match /groups/{groupId}/chats/{chatId}/messages/{messageId} {
      allow create: if (
        isMember(groupId, request.auth.uid)
      );
      allow update, delete: if (
        resource.data.createdBy == request.auth.uid
        || isAdmin(groupId, request.auth.uid) 
      )
      allow get, list: if (
        isMember(groupId, request.auth.uid)
      )
    }

    // Invites
    match /groups/{groupId}/invites/{inviteId} {
      allow create, update, delete, list: if (
        isAdmin(groupId, request.auth.uid)
      );
      allow get: if (
        request.auth != null
      );
    }

    match /{path=**}/invites/{inviteId} {
      allow get, list: if (
        request.auth != null
      );
    }

  }
}